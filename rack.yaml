substitutions:
  devicename: rack
  devicename_upper: Rack

<<: !include ./.base.yaml

esphome:
  name: ${devicename}
  platform: ESP8266
  board: nodemcuv2
  on_boot:
    priority: -10
    then:
    - script.execute: fan_off
    - if:
        condition:
          sensor.in_range:
            id: bme680_temp
            below: 24.0
        then:
        - script.execute: led_blue
    - if:
        condition:
          sensor.in_range:
            id: bme680_temp
            above: 24.0
            below: 28.0
        then:
        - script.execute: led_green
    - if:
        condition:
          sensor.in_range:
            id: bme680_temp
            above: 28.0
        then:
        - script.execute: led_red
        - script.execute: fan_med
      
# Motion PIR
# binary_sensor:
# - platform: gpio
#   pin: D4
#   name: "Rack Movement"
#   device_class: motion

output:
- platform: esp8266_pwm
  pin: D3
  frequency: 25000 Hz
  id: fan_output

## Fan
fan:
- platform: speed
  output: fan_output
  name: "${devicename_upper} Fan"
  id: "${devicename}_fan"
  speed_count: 5

## LED
light:
- platform: neopixelbus
  type: GRB
  pin: GPIO3
  num_leds: 1
  name: "${devicename_upper} Light"
  id: "${devicename}_led"

## I2C
i2c:
  sda: 4
  scl: 5
  scan: True

sensor:
## BME680
- platform: bme680
  temperature:
    name: "${devicename_upper} Temperature"
    id: bme680_temp
    oversampling: 16x
    on_value_range:
    ## BELOW 24°C > Set LED to blue
    - below: 24.0
      then:
      - script.execute: led_blue
    ## ABOVE 24°C > Set LED to GREEN
    - above: 24.0
      below: 28.0
      then:
      - script.execute: led_green
    ## BELOW 25°C > turn FAN OFF
    - below: 25.0
      then:
      - script.execute: fan_off
    ## ABOVE 26°C > turn FAN ON (LOW)
    - above: 26.0
      below: 28.0
      then:
      - script.execute: fan_low
    ## ABOVE 28°C > Set LED to RED, set speed to MEDIUM
    - above: 28.0
      below: 32.0
      then:
      - script.execute: led_red
      - script.execute: fan_med
    ## ABOVE 32°C > Set speed speed to HIGH
    - above: 32.0
      then:
      - script.execute: fan_high
  pressure:
    name: "${devicename_upper} Pressure"
  humidity:
    name: "${devicename_upper} Humidity"
  gas_resistance:
    name: "${devicename_upper} Gas Resistance"
  address: 0x77
  update_interval: 6s

## Fan speed
- platform: pulse_counter
  pin: D4
  name: "${devicename_upper} Fan RPM"
  update_interval: 6s
  unit_of_measurement: rpm
  accuracy_decimals: 0
  icon: "mdi:fan"
  filters:
  - multiply: 0.5


## Automations
script:
  # LED
  - id: led_blue
    then:
    - light.turn_on:
        id: "${devicename}_led"
        red: 0
        blue: 1
        green: 0
        brightness: .6
  - id: led_green
    then:
    - light.turn_on:
        id: "${devicename}_led"
        red: 0
        blue: 0
        green: 1
        brightness: .6
  - id: led_red
    then:
    - light.turn_on:
        id: "${devicename}_led"
        red: 1
        blue: 0
        green: 0
        brightness: .6
  - id: led_pink
    then:
    - light.turn_on:
        id: "${devicename}_led"
        red: 1
        blue: 1
        green: 0
        brightness: .6

  # FAN
  - id: fan_off
    then:
    - fan.turn_off:
        id: "${devicename}_fan"
  - id: fan_low
    then:
    - fan.turn_on:
        id: "${devicename}_fan"
        speed: 1
  - id: fan_med
    then:
    - fan.turn_on:
        id: "${devicename}_fan"
        speed: 3
  - id: fan_high
    then:
    - fan.turn_on:
        id: "${devicename}_fan"
        speed: 5

## Restart device once per day
switch:
- platform: restart
  id: restart_switch
interval:
- interval: 24h
  then:
    - switch.toggle: restart_switch
    