substitutions:
  devicename: stairs
  devicename_upper: Stairs

  ## Number of LEDs in strip (15 per stair)
  num_leds: "45"
  ## 15 LEDs x 15 stairs = 225 LEDs in strip
  # num_leds: "225"

  ## Time between toggling on/off the stairs
  step_delay: 0.5s

<<: !include .base32.yaml

wifi:
  fast_connect: true

binary_sensor:
  ## PIR
- platform: gpio
  pin: GPIO18
  name: "${devicename_upper} Motion Ground Floor"
  id: pir_ground_floor
  device_class: motion
  on_press:
    if:
      condition:
        and:
        - light.is_off: strip
        - light.is_off: steps
        - light.is_off: step1
        - light.is_off: step2
        - light.is_off: step3
        # - light.is_off: step4
        # - light.is_off: step5
        # - light.is_off: step6
        # - light.is_off: step7
        # - light.is_off: step8
        # - light.is_off: step9
        # - light.is_off: step10
        # - light.is_off: step11
        # - light.is_off: step12
        # - light.is_off: step13
        # - light.is_off: step14
        # - light.is_off: step15
      then:
      - script.execute: 
          id: bottom_to_top
          ## Motion events activate light for 10s
          delay_ms: 15000
- platform: gpio
  pin: GPIO19
  name: "${devicename_upper} Motion First Floor"
  id: pir_first_floor
  device_class: motion
  on_press:
    if:
      condition: 
        and:
        - light.is_off: strip
        - light.is_off: steps
        - light.is_off: step1
        - light.is_off: step2
        - light.is_off: step3
        # - light.is_off: step4
        # - light.is_off: step5
        # - light.is_off: step6
        # - light.is_off: step7
        # - light.is_off: step8
        # - light.is_off: step9
        # - light.is_off: step10
        # - light.is_off: step11
        # - light.is_off: step12
        # - light.is_off: step13
        # - light.is_off: step14
        # - light.is_off: step15
      then:
      - script.execute: 
          id: top_to_bottom
          ## Motion events activate light for 10s
          delay_ms: 15000

  ## Button
- platform: gpio
  pin:
    number: GPIO5
    mode: INPUT_PULLUP
    inverted: true
  id: button
  on_press:
    if:
      condition:
      - script.is_running: top_to_bottom
      then:
      - script.stop: top_to_bottom
      - light.turn_off:
          id: strip
      else:
      - light.turn_off:
          id: strip
          transition_length: 0s
      - script.execute: 
          id: top_to_bottom
          ## Button presses activate light for 30s
          delay_ms: 30000

## LED Strip
light:
- platform: neopixelbus
  variant: SK6812
  type: GRBW
  pin: GPIO4
  num_leds: "${num_leds}"
  id: strip
  name: "Full Strip"
  restore_mode: ALWAYS_OFF
  effects:
  - addressable_rainbow:
      width: 45
  - addressable_color_wipe:
      name: Police
      add_led_interval: 50ms
      colors:
      - red: 100%
        blue: 0%
        green: 0%
        white: 0%
        num_leds: 15
      - red: 0%
        blue: 100%
        green: 0%
        white: 0%
        num_leds: 15
  - addressable_scan:
      scan_width: 3
      move_interval: 20ms
  - addressable_twinkle:
  - addressable_fireworks:
  - addressable_flicker:
      name: Flicker

# Steps
- platform: partition
  name: Steps
  id: steps
  segments:
  - single_light_id: step1
  - single_light_id: step2
  - single_light_id: step3
  # - single_light_id: step4
  # - single_light_id: step5
  # - single_light_id: step6
  # - single_light_id: step7
  # - single_light_id: step8
  # - single_light_id: step9
  # - single_light_id: step10
  # - single_light_id: step11
  # - single_light_id: step12
  # - single_light_id: step13
  # - single_light_id: step14
  # - single_light_id: step15
  effects:
  - addressable_rainbow:
      width: 3
      # width: 15
  - addressable_color_wipe:
      name: Police
      add_led_interval: 500ms
      colors:
      - red: 100%
        blue: 0%
        green: 0%
        white: 0%
        num_leds: 1
      - red: 0%
        blue: 100%
        green: 0%
        white: 0%
        num_leds: 1
  - addressable_scan:
      move_interval: 300ms

# Separate full strip into 15 partitions (steps / stairs)
- platform: partition
  id: step1
  segments:
  - id: strip
    from: 0
    to: 14
- platform: partition
  id: step2
  segments:
  - id: strip
    from: 15
    to: 29
    reversed: true
- platform: partition
  id: step3
  segments:
  - id: strip
    from: 30
    to: 44
# - platform: partition
#   id: step4
#   segments:
#   - id: strip
#     from: 45
#     to: 59
#     reversed: true
# - platform: partition
#   id: step5
#   segments:
#   - id: strip
#     from: 60
#     to: 74
# - platform: partition
#   id: step6
#   segments:
#   - id: strip
#     from: 75
#     to: 89
#     reversed: true
# - platform: partition
#   id: step7
#   segments:
#   - id: strip
#     from: 90
#     to: 104
# - platform: partition
#   id: step8
#   segments:
#   - id: strip
#     from: 105
#     to: 119
#     reversed: true
# - platform: partition
#   id: step9
#   segments:
#   - id: strip
#     from: 120
#     to: 134
# - platform: partition
#   id: step10
#   segments:
#   - id: strip
#     from: 135
#     to: 149
#     reversed: true
# - platform: partition
#   id: step11
#   segments:
#   - id: strip
#     from: 150
#     to: 164
# - platform: partition
#   id: step12
#   segments:
#   - id: strip
#     from: 165
#     to: 179
#     reversed: true
# - platform: partition
#   id: step13
#   segments:
#   - id: strip
#     from: 190
#     to: 194
# - platform: partition
#   id: step14
#   segments:
#   - id: strip
#     from: 195
#     to: 209
#     reversed: true
# - platform: partition
#   id: step15
#   segments:
#   - id: strip
#     from: 210
#     to: 224

script:
- id: top_to_bottom
  mode: restart
  parameters:
    delay_ms: int
  then:
    ## Turn on the lights in proper order
  - light.turn_on: &color
      id: step1
      transition_length: 0.3s
      color_mode: RGB_WHITE
      brightness: 0.4
      white: 1.0
      color_brightness: 0 ## Required to keep the RGB leds off
      red: 0
      blue: 0
      green: 0
  - delay: ${step_delay}
  - light.turn_on:
      <<: *color
      id: step2
  - delay: ${step_delay}
  - light.turn_on:
      <<: *color
      id: step3
  # - light.turn_on:
  #     <<: *color
  #     id: step4
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step5
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step6
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step7
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step8
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step9
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step10
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step11
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step12
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step13
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step14
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step15

    ## Wait a few seconds
  - delay: !lambda return delay_ms;

    ## Start turning things off again
  - light.turn_off: step1
  - delay: ${step_delay}
  - light.turn_off: step2
  - delay: ${step_delay}
  - light.turn_off: step3
  # - delay: ${step_delay}
  # - light.turn_off: step4
  # - delay: ${step_delay}
  # - light.turn_off: step5
  # - delay: ${step_delay}
  # - light.turn_off: step6
  # - delay: ${step_delay}
  # - light.turn_off: step7
  # - delay: ${step_delay}
  # - light.turn_off: step8
  # - delay: ${step_delay}
  # - light.turn_off: step9
  # - delay: ${step_delay}
  # - light.turn_off: step10
  # - delay: ${step_delay}
  # - light.turn_off: step11
  # - delay: ${step_delay}
  # - light.turn_off: step12
  # - delay: ${step_delay}
  # - light.turn_off: step13
  # - delay: ${step_delay}
  # - light.turn_off: step14
  # - delay: ${step_delay}
  # - light.turn_off: step15

- id: bottom_to_top
  mode: restart
  parameters:
    delay_ms: int
  then:
    ## Turn on the lights in proper order
  - light.turn_on: 
      <<: *color
      id: step3
  - delay: ${step_delay}
  - light.turn_on:
      <<: *color
      id: step2
  - delay: ${step_delay}
  - light.turn_on:
      <<: *color
      id: step1

  # - light.turn_on: 
  #     <<: *color
  #     id: step15
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step14
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step13
  # - light.turn_on:
  #     <<: *color
  #     id: step12
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step11
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step10
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step9
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step8
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step7
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step6
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step5
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step4
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step3
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step2
  # - delay: ${step_delay}
  # - light.turn_on:
  #     <<: *color
  #     id: step1

    ## Wait a few seconds
  - delay: !lambda return delay_ms;

    ## Start turning things off again
  - light.turn_off: step3
  - delay: ${step_delay}
  - light.turn_off: step2
  - delay: ${step_delay}
  - light.turn_off: step1
  # - light.turn_off: step15
  # - delay: ${step_delay}
  # - light.turn_off: step14
  # - delay: ${step_delay}
  # - light.turn_off: step13
  # - delay: ${step_delay}
  # - light.turn_off: step12
  # - delay: ${step_delay}
  # - light.turn_off: step11
  # - delay: ${step_delay}
  # - light.turn_off: step10
  # - delay: ${step_delay}
  # - light.turn_off: step9
  # - delay: ${step_delay}
  # - light.turn_off: step8
  # - delay: ${step_delay}
  # - light.turn_off: step7
  # - delay: ${step_delay}
  # - light.turn_off: step6
  # - delay: ${step_delay}
  # - light.turn_off: step5
  # - delay: ${step_delay}
  # - light.turn_off: step4
  # - delay: ${step_delay}
  # - light.turn_off: step3
  # - delay: ${step_delay}
  # - light.turn_off: step2
  # - delay: ${step_delay}
  # - light.turn_off: step1
